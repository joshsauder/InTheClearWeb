{"ast":null,"code":"var _jsxFileName = \"/Users/joshsauder/Projects/intheclearweb/src/components/GooglePlaces.js\";\nimport React, { Component, createRef } from 'react';\nimport '../App.css';\nimport '../style/GooglePlaces.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\n\nclass GooglePlaces extends Component {\n  constructor(props) {\n    super(props);\n    const google = props.google;\n  }\n\n  componentDidMount() {\n    const script = document.getElementById(\"googleMapsAPI\");\n    var input = document.getElementById('autoCompleteText');\n    script.addEventListener('load', () => {\n      var autocomplete = google.maps.places.Autocomplete(input);\n      google.maps.event.addListener(autocomplete, 'place_changed', function () {\n        var place = autocomplete.getPlace();\n        document.getElementById('altCity').value = place.name;\n        document.getElementById('lat').value = place.geometry.location.lat();\n        document.getElementById('long').value = place.geometry.location.lng();\n      });\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"jumbotron\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"autoCompleteText\",\n      type: \"text\",\n      size: \"50\",\n      placeholder: \"Start Location\",\n      autoComplete: \"on\",\n      runat: \"server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"altCity\",\n      name: \"city2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"lat\",\n      name: \"cityLat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"long\",\n      name: \"cityLng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default GooglePlaces;","map":{"version":3,"sources":["/Users/joshsauder/Projects/intheclearweb/src/components/GooglePlaces.js"],"names":["React","Component","createRef","Jumbotron","GooglePlaces","constructor","props","google","componentDidMount","script","document","getElementById","input","addEventListener","autocomplete","maps","places","Autocomplete","event","addListener","place","getPlace","value","name","geometry","location","lat","lng","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAO,YAAP;AACA,OAAO,2BAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;;AAGA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,UAAMC,MAAM,GAAGD,KAAK,CAACC,MAArB;AACD;;AAEDC,EAAAA,iBAAiB,GAAE;AAGf,UAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAAf;AACA,QAAIC,KAAK,GAAGF,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,CAAZ;AAEAF,IAAAA,MAAM,CAACI,gBAAP,CAAwB,MAAxB,EAAgC,MAAM;AACpC,UAAIC,YAAY,GAAGP,MAAM,CAACQ,IAAP,CAAYC,MAAZ,CAAmBC,YAAnB,CAAgCL,KAAhC,CAAnB;AAEAL,MAAAA,MAAM,CAACQ,IAAP,CAAYG,KAAZ,CAAkBC,WAAlB,CAA8BL,YAA9B,EAA4C,eAA5C,EAA6D,YAAW;AACpE,YAAIM,KAAK,GAAGN,YAAY,CAACO,QAAb,EAAZ;AACAX,QAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCW,KAAnC,GAA2CF,KAAK,CAACG,IAAjD;AACAb,QAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAxB,EAA+BW,KAA/B,GAAuCF,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBC,GAAxB,EAAvC;AACAhB,QAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCW,KAAhC,GAAwCF,KAAK,CAACI,QAAN,CAAeC,QAAf,CAAwBE,GAAxB,EAAxC;AAEH,OAND;AAOD,KAVD;AAWH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,EAAE,EAAC,kBAAV;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,IAAI,EAAC,IAA9C;AAAmD,MAAA,WAAW,EAAC,gBAA/D;AAAgF,MAAA,YAAY,EAAC,IAA7F;AAAkG,MAAA,KAAK,EAAC,QAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,SAAxB;AAAkC,MAAA,IAAI,EAAC,OAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,KAAxB;AAA8B,MAAA,IAAI,EAAC,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,EAAE,EAAC,MAAxB;AAA+B,MAAA,IAAI,EAAC,SAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF,CADA;AAUH;;AApC8B;;AAuCrC,eAAexB,YAAf","sourcesContent":["import React, {Component, createRef} from 'react';\nimport '../App.css';\nimport '../style/GooglePlaces.css'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\n\n\nclass GooglePlaces extends Component {\n    constructor(props) {\n        super(props);\n        const google = props.google;\n      }\n\n      componentDidMount(){\n          \n         \n          const script = document.getElementById(\"googleMapsAPI\")\n          var input = document.getElementById('autoCompleteText');\n\n          script.addEventListener('load', () => {\n            var autocomplete = google.maps.places.Autocomplete(input);\n\n            google.maps.event.addListener(autocomplete, 'place_changed', function() {\n                var place = autocomplete.getPlace();\n                document.getElementById('altCity').value = place.name;\n                document.getElementById('lat').value = place.geometry.location.lat();\n                document.getElementById('long').value = place.geometry.location.lng();\n\n            })\n          })\n      }\n\n      render() {\n          return (\n          <div>\n            <Jumbotron className=\"jumbotron\">\n                <input id=\"autoCompleteText\" type=\"text\" size=\"50\" placeholder=\"Start Location\" autoComplete=\"on\" runat=\"server\" />\n                <input type=\"hidden\" id=\"altCity\" name=\"city2\" />\n                <input type=\"hidden\" id=\"lat\" name=\"cityLat\" />\n                <input type=\"hidden\" id=\"long\" name=\"cityLng\" />\n            </Jumbotron>\n          </div>\n          )\n      }\n}\n\nexport default GooglePlaces;"]},"metadata":{},"sourceType":"module"}