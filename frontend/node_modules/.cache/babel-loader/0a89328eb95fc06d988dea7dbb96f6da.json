{"ast":null,"code":"var _jsxFileName = \"/Users/joshsauder/Projects/intheclearweb/src/components/googleMap.js\";\nimport React, { Component, createRef } from 'react';\nimport '../App.css';\nimport GooglePlaces from './GooglePlaces';\n\nclass GoogleMap extends Component {\n  constructor(props) {\n    super(props);\n    this.GoogleMapsRef = createRef();\n\n    this.createMap = () => new window.google.maps.Map(this.GoogleMapsRef.current, {\n      zoom: 16,\n      center: this.state.location,\n      disableDefaultUI: true\n    });\n\n    this.state = {\n      loaded: false,\n      startLocation: {\n        lat: 37.3317,\n        lng: -122.0306\n      },\n      endLocation: {\n        lat: 37.3317,\n        lng: -122.0306\n      }\n    };\n    this.callbackStart = this.callbackStart.bind(this);\n    this.callbackEnd = this.callbackEnd.bind(this);\n  }\n\n  componentDidMount() {\n    const googleMapsAPI = document.createElement(\"script\");\n    googleMapsAPI.src = \"https://maps.googleapis.com/maps/api/js?key=\".concat(process.env.REACT_APP_GOOGLE_MAPS, \"&libraries=places\");\n    console.log(googleMapsAPI.src);\n    googleMapsAPI.id = \"googleMaps\";\n    window.document.body.appendChild(googleMapsAPI);\n    googleMapsAPI.addEventListener(\"load\", () => {\n      this.setState({\n        loaded: true\n      });\n      this.googleMaps = this.createMap();\n      this.markerStart = null;\n      this.markerEnd = null;\n    });\n  }\n\n  callbackStart(coordinates) {\n    this.setState({\n      startLocation: coordinates\n    });\n    var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n    this.markerStart = new window.google.maps.Marker({\n      position: newCoordinates,\n      map: this.googleMaps,\n      title: \"Start Location\",\n      animation: window.google.maps.Animation.DROP\n    });\n    this.googleMaps.setCenter(newCoordinates);\n    this.markerStart.setMap(this.googleMaps);\n  }\n\n  callbackEnd(coordinates) {\n    this.setState({\n      endLocation: coordinates\n    });\n    var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n    this.markerEnd = new window.google.maps.Marker({\n      position: newCoordinates,\n      title: \"End Location\",\n      animation: window.google.maps.Animation.DROP\n    });\n    this.googleMaps.setCenter(newCoordinates);\n    this.markerEnd.setMap(this.googleMaps);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"map\",\n      ref: this.GoogleMapsRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), this.state.loaded ? React.createElement(GooglePlaces, {\n      callbackStart: this.callbackStart,\n      callbackEnd: this.callbackEnd,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }) : null);\n  }\n\n}\n\nexport default GoogleMap;","map":{"version":3,"sources":["/Users/joshsauder/Projects/intheclearweb/src/components/googleMap.js"],"names":["React","Component","createRef","GooglePlaces","GoogleMap","constructor","props","GoogleMapsRef","createMap","window","google","maps","Map","current","zoom","center","state","location","disableDefaultUI","loaded","startLocation","lat","lng","endLocation","callbackStart","bind","callbackEnd","componentDidMount","googleMapsAPI","document","createElement","src","process","env","REACT_APP_GOOGLE_MAPS","console","log","id","body","appendChild","addEventListener","setState","googleMaps","markerStart","markerEnd","coordinates","newCoordinates","LatLng","Marker","position","map","title","animation","Animation","DROP","setCenter","setMap","render"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport '../App.css';\nimport GooglePlaces from './GooglePlaces';\n\nclass GoogleMap extends Component {\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          loaded: false, \n          startLocation:{\n            lat: 37.3317,\n            lng: -122.0306\n          },\n          endLocation: {\n            lat: 37.3317,\n            lng: -122.0306\n          }\n        }\n        this.callbackStart = this.callbackStart.bind(this);\n        this.callbackEnd = this.callbackEnd.bind(this);\n      }\n\n      GoogleMapsRef = createRef()\n\n      componentDidMount() {\n        const googleMapsAPI = document.createElement(\"script\")\n        googleMapsAPI.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS}&libraries=places`;\n        console.log(googleMapsAPI.src);\n        googleMapsAPI.id = \"googleMaps\"\n        window.document.body.appendChild(googleMapsAPI);\n\n        googleMapsAPI.addEventListener(\"load\", () => {\n          this.setState({loaded: true})\n          this.googleMaps = this.createMap()\n          this.markerStart = null;\n          this.markerEnd = null;\n        })\n      }\n\n\n      createMap = () =>\n        new window.google.maps.Map(this.GoogleMapsRef.current, {\n          zoom: 16,\n          center: this.state.location,\n          disableDefaultUI: true,\n        })\n\n      callbackStart(coordinates){\n          this.setState({startLocation: coordinates});\n\n          var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n\n          this.markerStart = new window.google.maps.Marker({\n            position: newCoordinates,\n            map: this.googleMaps,\n            title: \"Start Location\",\n            animation: window.google.maps.Animation.DROP\n          })\n          this.googleMaps.setCenter(newCoordinates)\n          this.markerStart.setMap(this.googleMaps)\n\n      }\n\n      callbackEnd(coordinates){\n        this.setState({endLocation: coordinates});\n\n        var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n\n        this.markerEnd = new window.google.maps.Marker({\n          position: newCoordinates,\n          title: \"End Location\",\n          animation: window.google.maps.Animation.DROP\n        })\n\n        this.googleMaps.setCenter(newCoordinates)\n        this.markerEnd.setMap(this.googleMaps)\n\n      }\n\n      render() {\n        return (\n          <div>\n          <div className=\"map\" ref={this.GoogleMapsRef} />\n          { this.state.loaded ? <GooglePlaces callbackStart={this.callbackStart} callbackEnd={this.callbackEnd} /> : null }\n          </div>\n        );\n      }\n    \n}\n\nexport default GoogleMap;"]},"metadata":{},"sourceType":"module"}