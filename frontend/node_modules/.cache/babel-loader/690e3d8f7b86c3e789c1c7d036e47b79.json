{"ast":null,"code":"var _jsxFileName = \"/Users/joshsauder/Projects/intheclearweb/src/components/GooglePlaces.js\";\nimport React, { Component, createRef } from 'react';\nimport '../App.css';\nimport '../style/GooglePlaces.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport logo from '../images/InTheClear.png';\n\nclass GooglePlaces extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startCoordinates: {\n        lat: 37.3317,\n        lng: -122.0306\n      },\n      endCoordinates: {\n        lat: 37.3317,\n        lng: -122.0306\n      }\n    };\n    this.handlePlacesStartSelect = this.handlePlacesStartSelect.bind(this);\n    this.handlePlacesEndSelect = this.handlePlacesEndSelect.bind(this);\n  }\n\n  componentDidMount() {\n    var startInput = document.getElementById('locationStart');\n    var destinationInput = document.getElementById('locationEnd');\n    this.autocompleteStart = new window.google.maps.places.Autocomplete(startInput);\n    this.autocompleteDest = new window.google.maps.places.Autocomplete(destinationInput);\n    window.google.maps.event.addListener(this.autocompleteStart, 'place_changed', this.handlePlacesStartSelect);\n    window.google.maps.event.addListener(this.autocompleteDest, 'place_changed', this.handlePlacesEndSelect);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.startCoordinates !== this.state.startCoordinates) {\n      this.props.callbackStart(this.state.startCoordinates);\n    } else if (prevState.endCoordinates !== this.state.endCoordinates) {\n      this.props.callbackEnd(this.state.endCoordinates);\n    }\n  }\n\n  handlePlacesStartSelect() {\n    var placeStart = this.autocompleteStart.getPlace();\n    document.getElementById('cityStart').value = placeStart.name;\n    var lat = document.getElementById('latStart').value = placeStart.geometry.location.lat();\n    var long = document.getElementById('longStart').value = placeStart.geometry.location.lng();\n    this.setState({\n      startCoordinates: {\n        lat: lat,\n        lng: long\n      }\n    });\n  }\n\n  handlePlacesEndSelect() {\n    var placeEnd = this.autocompleteDest.getPlace();\n    document.getElementById('cityEnd').value = placeEnd.name;\n    var lat = document.getElementById('latEnd').value = placeEnd.geometry.location.lat();\n    var long = document.getElementById('longEnd').value = placeEnd.geometry.location.lng();\n    this.setState({\n      endCoordinates: {\n        lat: lat,\n        lng: long\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Jumbotron, {\n      className: \"directionsJumbotron ml-md-2 mt-md-2 col-md-6 col-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"mx-auto d-block img-logo mb-1\",\n      alt: \"logo\",\n      src: logo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"input-group mb-1 mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"locationStart\",\n      type: \"text\",\n      size: \"50\",\n      placeholder: \"Start Location\",\n      autoComplete: \"on\",\n      runat: \"server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"cityStart\",\n      name: \"city2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"latStart\",\n      name: \"cityLat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"longStart\",\n      name: \"cityLng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"input-group mb-1 mt-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"form-control\",\n      id: \"locationEnd\",\n      type: \"text\",\n      size: \"50\",\n      placeholder: \"Destination Location\",\n      autoComplete: \"on\",\n      runat: \"server\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"cityEnd\",\n      name: \"city2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"latEnd\",\n      name: \"cityLat\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"longEnd\",\n      name: \"cityLng\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default GooglePlaces;","map":{"version":3,"sources":["/Users/joshsauder/Projects/intheclearweb/src/components/GooglePlaces.js"],"names":["React","Component","createRef","Jumbotron","logo","GooglePlaces","constructor","props","state","startCoordinates","lat","lng","endCoordinates","handlePlacesStartSelect","bind","handlePlacesEndSelect","componentDidMount","startInput","document","getElementById","destinationInput","autocompleteStart","window","google","maps","places","Autocomplete","autocompleteDest","event","addListener","componentDidUpdate","prevProps","prevState","callbackStart","callbackEnd","placeStart","getPlace","value","name","geometry","location","long","setState","placeEnd","render"],"mappings":"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","sourcesContent":["import React, {Component, createRef} from 'react';\nimport '../App.css';\nimport '../style/GooglePlaces.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport logo from '../images/InTheClear.png';\n\n\nclass GooglePlaces extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            startCoordinates: {\n                lat: 37.3317,\n                lng: -122.0306\n            },\n            endCoordinates :{\n                lat: 37.3317,\n                lng: -122.0306\n            }\n\n        }\n        \n        this.handlePlacesStartSelect = this.handlePlacesStartSelect.bind(this)\n        this.handlePlacesEndSelect = this.handlePlacesEndSelect.bind(this)\n        \n      }\n\n      componentDidMount(){\n          \n          var startInput = document.getElementById('locationStart');\n          var destinationInput = document.getElementById('locationEnd')\n\n          this.autocompleteStart = new window.google.maps.places.Autocomplete(startInput);\n          this.autocompleteDest = new window.google.maps.places.Autocomplete(destinationInput);\n\n          window.google.maps.event.addListener(this.autocompleteStart, 'place_changed', this.handlePlacesStartSelect)\n\n          window.google.maps.event.addListener(this.autocompleteDest, 'place_changed', this.handlePlacesEndSelect)\n\n      }\n\n      componentDidUpdate(prevProps, prevState){\n\n        if(prevState.startCoordinates !== this.state.startCoordinates){\n            this.props.callbackStart(this.state.startCoordinates);\n        } else if(prevState.endCoordinates !== this.state.endCoordinates){\n            this.props.callbackEnd(this.state.endCoordinates);\n        }\n\n      }\n\n      handlePlacesStartSelect(){\n\n        var placeStart = this.autocompleteStart.getPlace();\n        document.getElementById('cityStart').value = placeStart.name;\n        var lat = document.getElementById('latStart').value = placeStart.geometry.location.lat();\n        var long = document.getElementById('longStart').value = placeStart.geometry.location.lng();\n        this.setState({startCoordinates:{lat: lat, lng: long}})\n\n      }\n\n      handlePlacesEndSelect(){\n\n        var placeEnd = this.autocompleteDest.getPlace();\n        document.getElementById('cityEnd').value = placeEnd.name;\n        var lat = document.getElementById('latEnd').value = placeEnd.geometry.location.lat();\n        var long = document.getElementById('longEnd').value = placeEnd.geometry.location.lng();\n        this.setState({endCoordinates:{lat: lat, lng: long}})\n\n      }\n\n      render() {\n          return (\n          <div className=\"row container\">\n            <Jumbotron className=\"directionsJumbotron ml-md-2 mt-md-2 col-md-6 col-12\">\n                <img className=\"mx-auto d-block img-logo mb-1\" alt=\"logo\" src={logo}></img>\n                <div className=\"input-group mb-1 mt-4\">\n                    <input className=\"form-control\" id=\"locationStart\" type=\"text\" size=\"50\" placeholder=\"Start Location\" autoComplete=\"on\" runat=\"server\" />\n                    <input type=\"hidden\" id=\"cityStart\" name=\"city2\" />\n                    <input type=\"hidden\" id=\"latStart\" name=\"cityLat\" />\n                    <input type=\"hidden\" id=\"longStart\" name=\"cityLng\" />\n                </div>\n                <div className=\"input-group mb-1 mt-4\">\n                    <input className=\"form-control\" id=\"locationEnd\" type=\"text\" size=\"50\" placeholder=\"Destination Location\" autoComplete=\"on\" runat=\"server\" />\n                    <input type=\"hidden\" id=\"cityEnd\" name=\"city2\" />\n                    <input type=\"hidden\" id=\"latEnd\" name=\"cityLat\" />\n                    <input type=\"hidden\" id=\"longEnd\" name=\"cityLng\" />\n                </div>\n            </Jumbotron>\n          </div>\n          )\n      }\n}\n\nexport default GooglePlaces;"]},"metadata":{},"sourceType":"module"}