{"version":3,"sources":["components/GooglePlaces.js","components/PolylineGenerator.js","components/CityData.js","components/TripStops.js","models/trips.js","components/googleMap.js","components/loginContainer.js","components/login.js","App.js","services/authService.js","serviceWorker.js","index.js","images/InTheClear.png","images/cloud.png","images/CloudyNight.png","images/danger.png","images/Night.png","images/partlyCloudy.png","images/rain.png","images/snow.png","images/sun.png","images/arrow-right-solid.svg","images/align-justify-solid.svg","images/trash-alt-solid.svg"],"names":["GooglePlaces","props","handlePlacesStartSelect","placeStart","autocompleteStart","getPlace","lat","geometry","location","long","lng","setState","startCoordinates","name","handlePlacesEndSelect","placeEnd","autocompleteDest","endCoordinates","state","startInput","document","getElementById","destinationInput","this","window","google","maps","places","Autocomplete","event","addListener","prevProps","prevState","callbackStart","callbackEnd","className","alt","src","logo","id","type","size","placeholder","autoComplete","runat","Component","PolylineGenerator","cityWeather","duration","distance","stops","map","bounds","generatePolyline","shift","length","createPolylineAndWeatherData","start","end","axios","get","response","path","encoding","decodePath","data","points","steps","post","response_1","weather","cities","locations","weatherPerStep","i","extend","cityTemp","forEach","city","index","obj","includes","push","console","log","strokeColor","step","ret","determineSegCount","Condition","value","newPolyline","slice","tempPath","Math","abs","end_location","color","polyline","Polyline","strokeOpacity","strokeWeight","polylineArray","setMap","RenderCityData","round","cityData","min","hour","hourString","minString","Body","startLocation","arrow","endLocation","tripData","key","determineIcon","Description","Temperature","condition","rain","danger","snow","cloudy","partlyCloudy","cloudNight","night","sun","CityData","Spinner","animation","variant","DragHandle","sortableHandle","dragImg","TrashHandle","onRemove","onClick","trashImg","SortableItem","sortableElement","date","handleDate","data-enable-time","onChange","SortableList","sortableContainer","items","TripStops","handlePlacesStopSelect","placeStop","autocompleteStop","Date","stopInput","handlePlacesRemove","splice","onSortEnd","oldIndex","newIndex","arrayMove","onSubmit","callback","dateItem","item","show","Modal","onHide","hide","Header","closeButton","Title","useDragHandle","Footer","Button","TripsModel","GoogleMap","GoogleMapsRef","createRef","createMap","Map","current","zoom","center","disableDefaultUI","postStops","trip","severe","Axios","catch","err","coordinates","Object","assign","markerStart","newCoordinates","LatLng","Marker","position","googleMaps","title","Animation","DROP","setCenter","markerEnd","loaded","showCityData","startMarker","endMarker","showStopModal","showDirections","bind","googleMapsAPI","createElement","process","body","appendChild","addEventListener","showModal","line","LatLngBounds","directionsData","fitBounds","ref","LoginContainer","style","children","Login","handleInputChange","target","preventDefault","loginObj","username","password","withCredentials","then","res","status","history","alert","submitNewUser","userObj","email","login","handleNewUser","htmlFor","defaultValue","defaults","baseURL","App","component","AuthComponent","redirect","loading","Error","error","to","Fragment","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e037f472.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\nimport '../style/GooglePlaces.css';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport logo from '../images/InTheClear.png';\n\n\nclass GooglePlaces extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state ={\n            startCoordinates: {\n                lat: 37.3317,\n                lng: -122.0306,\n                name: \"Apple HQ\"\n            },\n            endCoordinates :{\n                lat: 37.3317,\n                lng: -122.0306,\n                name: \"Apple HQ\"\n            }\n\n        }\n        \n      }\n\n      componentDidMount(){\n          \n          var startInput = document.getElementById('locationStart');\n          var destinationInput = document.getElementById('locationEnd')\n\n          this.autocompleteStart = new window.google.maps.places.Autocomplete(startInput);\n          this.autocompleteDest = new window.google.maps.places.Autocomplete(destinationInput);\n\n          window.google.maps.event.addListener(this.autocompleteStart, 'place_changed', this.handlePlacesStartSelect)\n\n          window.google.maps.event.addListener(this.autocompleteDest, 'place_changed', this.handlePlacesEndSelect)\n\n      }\n\n      componentDidUpdate(prevProps, prevState){\n\n        if(prevState.startCoordinates !== this.state.startCoordinates){\n            this.props.callbackStart(this.state.startCoordinates);\n        } else if(prevState.endCoordinates !== this.state.endCoordinates){\n            this.props.callbackEnd(this.state.endCoordinates);\n        }\n\n      }\n\n      handlePlacesStartSelect = () => {\n\n        var placeStart = this.autocompleteStart.getPlace();\n        var lat = placeStart.geometry.location.lat();\n        var long = placeStart.geometry.location.lng();\n        this.setState({startCoordinates:{lat: lat, lng: long, name: placeStart.name}})\n\n      }\n\n      handlePlacesEndSelect = () => {\n\n        var placeEnd = this.autocompleteDest.getPlace();\n        var lat = placeEnd.geometry.location.lat();\n        var long =  placeEnd.geometry.location.lng();\n        this.setState({endCoordinates:{lat: lat, lng: long, name: placeEnd.name}})\n\n      }\n\n      render() {\n          return (\n          <div className=\"row container\">\n            <Jumbotron className=\"directionsJumbotron ml-md-2 mt-md-2 col-5\">\n                <img className=\"mx-auto d-block img-logo mb-1\" alt=\"logo\" src={logo}></img>\n                <div className=\"input-group mb-1 mt-4\">\n                    <input className=\"form-control\" id=\"locationStart\" type=\"text\" size=\"50\" placeholder=\"Start Location\" autoComplete=\"on\" runat=\"server\" />\n                </div>\n                <div className=\"input-group mb-1 mt-4\">\n                    <input className=\"form-control\" id=\"locationEnd\" type=\"text\" size=\"50\" placeholder=\"Destination Location\" autoComplete=\"on\" runat=\"server\" />\n                </div>\n            </Jumbotron>\n          </div>\n          )\n      }\n}\n\nexport default GooglePlaces;","import React, {Component} from 'react';\nimport axios from 'axios';\n\nconst snowSeg = '#1E88E5'\nconst rainSeg = '#43A047'\nconst sunSeg = '#FBC02D'\nconst cloudSeg = '#616161'\nconst stormSeg = '#E53935'\n\nclass PolylineGenerator extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.cityWeather =[]\n        this.duration = 0\n        this.distance = 0\n        \n    }\n\n    async createPolylineAndWeatherData(stops, map, bounds){\n\n        await this.generatePolyline(stops[0], stops[1], map, bounds)   \n\n        stops.shift()\n        if(stops.length > 1){\n            await this.createPolylineAndWeatherData(stops, map, bounds)   \n        }\n\n        return [bounds, this.cityWeather, this.duration, this.distance]\n    }\n\n\n    async generatePolyline(start, end, map, bounds){\n        var path;\n        var steps\n        try {\n            const response = await axios.get(`/api/directions/${start.lat},${start.lng}/${end.lat},${end.lng}`);\n            path = window.google.maps.geometry.encoding.decodePath(response.data.points);\n            steps = response.data.steps;\n            delete response.data.points;\n\n            const response_1 = await axios.post(\"/api/directions/info\", response.data);\n            var weather = response_1.data.weather;\n            var cities = response_1.data.locations;\n\n            this.weatherPerStep(steps, path, weather, map);\n            for (var i = 0; i < path.length; i++) {\n                bounds.extend(path[i]);\n            }\n\n            var cityTemp = [];\n            cities.forEach((city, index) => {\n                let obj = { city: city, weather: weather[index] };\n                if (!cityTemp.includes(city)) {\n                    cityTemp.push(city);\n                    this.cityWeather.push(obj);\n                }\n            });\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    getWeatherInfo(steps){\n        return axios.post(\"/api/directions/info\", steps)\n    }\n\n\n    weatherPerStep(steps, path, weather, map){\n        let i = 0;\n        var strokeColor =''\n\n        steps.forEach((step, index) => {\n            let ret = this.determineSegCount(step, path, i)\n            i = ret[0]\n            switch(weather[index].Condition){\n                case \"rain\": \n                    strokeColor = rainSeg;\n                    break;\n                case \"danger\":\n                    strokeColor = stormSeg;\n                    break;\n                case \"snow\":\n                case \"sleet\":\n                    strokeColor = snowSeg;\n                    break;\n                case \"cloudy\":\n                case \"partly-cloudy-day\":\n                case \"partly-cloudy-night\":\n                    strokeColor = cloudSeg;\n                    break;\n                default: \n                    strokeColor = sunSeg;\n                    break;\n            }\n            this.duration += step.duration.value\n            this.distance += step.distance.value\n            \n            this.newPolyline(ret[1], strokeColor, map)\n        })\n\n        this.newPolyline(path.slice(i, path.length), strokeColor, map)\n\n    }\n\n    determineSegCount(step, path, index){\n\n        let tempPath = []\n        var i = index\n\n        while(Math.abs(path[i].lat() - step.end_location.lat) >= 0.1 || Math.abs(path[i].lng() - step.end_location.lng ) >= 0.1 ){\n            tempPath.push(path[i])\n            i += 1\n        }\n        if (i != 0){\n            i -= 1\n        }\n        return ([i, tempPath])\n    }\n\n    newPolyline(path, color, map){\n        var polyline = new window.google.maps.Polyline({\n            path: path,\n            strokeColor: color,\n            strokeOpacity: 1,\n            strokeWeight: 6,\n        });\n\n        this.polylineArray.push(polyline)\n        polyline.setMap(map)\n    }\n\n}\n\nexport default PolylineGenerator;","import React, {Component} from 'react';\nimport {Jumbotron, Spinner} from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport '../style/CityData.css';\nimport cloudy from '../images/cloud.png';\nimport cloudNight from '../images/CloudyNight.png';\nimport danger from '../images/danger.png';\nimport night from '../images/Night.png';\nimport partlyCloudy from '../images/partlyCloudy.png';\nimport rain from '../images/rain.png';\nimport snow from '../images/snow.png';\nimport sun from '../images/sun.png';\nimport arrow from '../images/arrow-right-solid.svg'\n\n\nfunction RenderCityData(props){\n\n    let distance = Math.round(props.cityData.distance/1609.344)\n\n    let min = Math.round(props.cityData.duration / 60)\n    let hour = Math.round(props.cityData.duration / 3600)\n\n    let hourString = hour > 0 ? `${hour}hr` : \"\"\n    let minString = min > 0 ? `${min}min` : \"\"\n\n    return(\n        <div>\n            <Card className=\"mb-2 shadow rounded\">\n                <Card.Body>\n                    <div className=\"lead row col-12\"><b>{props.cityData.startLocation.name}</b><img src={arrow} className=\"d-block arrow-img ml-2 mr-2\"></img><b>{props.cityData.endLocation.name}</b></div>\n                    <div className=\"lead\">Distance: {distance} miles</div>\n                    <div className=\"lead\">Driving Time: {hourString} {minString}</div>\n                </Card.Body>\n            </Card>\n            <div className=\"menuScroll\">\n                {props.cityData.tripData.map((city, index) => \n                    <Card key={index} className={`${determineIcon(city.weather.Condition)[1]} mb-3 shadow rounded`} >\n                        <Card.Body className=\"row\"> \n                            <div className=\"col-7 text-white\">\n                                <div className=\"row\">\n                                    <div className=\"col-12 text-left lead\">{city.city}</div>\n                                </div>\n                                <div className=\"row\">\n                                    <div className=\"col-8 text-left lead\">{city.weather.Description}</div>   \n                                    <div className=\"col-4 text-left lead\">{Math.round(city.weather.Temperature)}&deg;</div>\n                                </div>\n                            </div>\n                            <div className=\"col-5\"><img className=\"mx-auto d-block img-fluid img-white\" src={determineIcon(city.weather.Condition)[0]} /></div>\n                        </Card.Body>\n                    </Card>\n                )}\n            </div>\n        </div> \n    )\n\n}\n\nfunction determineIcon(condition){\n    switch(condition){\n        case \"rain\": \n            return [rain, \"rainCell\"];\n        case \"danger\":\n            return [danger, \"stormCell\"];\n        case \"snow\":\n        case \"sleet\":\n            return [snow, \"snowCell\"];\n        case \"cloudy\":\n            return [cloudy, \"cloudCell\"];\n        case \"partly-cloudy-day\":\n            return [partlyCloudy, \"cloudCell\"];\n        case \"partly-cloudy-night\":\n            return [cloudNight, \"cloudCell\"];\n        case \"clear-night\":\n            return [night, \"nightCell\"];\n        default: \n            return [sun, \"sunCell\"];\n    }\n}\n\nclass CityData extends Component {\n\n    constructor(props){\n        super(props);\n    }\n\n\n    render(){\n        return(\n            <div className=\"row container\">\n                <Jumbotron className = \"ml-md-2 col-5 cityDataJumbotron\">\n                    {this.props.cityData.tripData.length > 0 ? \n                    <RenderCityData cityData={this.props.cityData}/> :\n                    <div className=\"d-flex justify-content-center\">\n                        <Spinner animation=\"border\" variant=\"light\" />\n                    </div> }\n                </Jumbotron>\n            </div>\n        )\n    }\n}\n\nexport default CityData;","import React, {Component} from 'react';\nimport {Modal, Button} from \"react-bootstrap\"\nimport '../style/TripStops.css'\nimport 'flatpickr/dist/themes/material_green.css'\nimport {sortableContainer, sortableElement, sortableHandle} from 'react-sortable-hoc';\nimport arrayMove from 'array-move';\nimport Flatpickr from 'react-flatpickr'\nimport dragImg from '../images/align-justify-solid.svg';\nimport trashImg from '../images/trash-alt-solid.svg';\n\nconst DragHandle = sortableHandle(() => <span className=\"spanText\"><img className=\"dragImage\" src={dragImg}></img></span>);\nconst TrashHandle = ({onRemove, index}) => <button className=\"col-auto mr-2\" onClick={() => onRemove(index)}><img src={trashImg} className=\"dragImage\" /></button>\nconst SortableItem = sortableElement(({value, index, onRemove, date, handleDate}) => {\n    return(\n    <div className=\"boxedItem row sortItem mb-2\">\n        <DragHandle />\n        <span className=\"col-4 mr-auto spanText\">{value}</span>\n        <Flatpickr data-enable-time\n        value={date}\n        onChange={date => {handleDate(date, index++)}} />\n        <TrashHandle onRemove={onRemove} index={index}/>\n    </div>\n    )\n});\n\nconst SortableList = sortableContainer(({items, onRemove, date, handleDate}) => {\n  return(\n      <div>\n        {items.map((value, index) => \n            <SortableItem \n                key={index}\n                index={index}\n                value={value.name}\n                onRemove={onRemove}\n                date={date[index+1]}\n                handleDate={handleDate}\n            />\n        )}\n      </div>\n  );\n});\n\nclass TripStops extends Component {\n\n    constructor(props){\n        super(props)\n\n        this.state = {\n            stops: [],\n            date: [new Date()]\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState){\n\n        if(this.props.show == true){\n            this.stopInput = document.getElementById('stopLocation');\n\n            this.autocompleteStop = new window.google.maps.places.Autocomplete(this.stopInput);\n\n            window.google.maps.event.addListener(this.autocompleteStop, 'place_changed', this.handlePlacesStopSelect)\n\n        }\n\n    }\n\n    handlePlacesStopSelect = () => {\n\n        var placeStop = this.autocompleteStop.getPlace();\n\n        var data = {lat: placeStop.geometry.location.lat(), lng: placeStop.geometry.location.lng(), name: placeStop.name}\n        var date = data ? new Date() : null\n        \n        this.setState(prevState => ({\n            stops: [...prevState.stops, data],\n            date: [...prevState.date, date]\n        }))\n\n        this.stopInput.value = \"\"\n    }\n\n    handlePlacesRemove = (index) => {\n        this.setState(function(prevState){\n            prevState.stops.splice(index, 1)\n            return{\n                stops: prevState.stops\n            }\n        })\n    }\n\n    onSortEnd = ({oldIndex, newIndex}) => {\n        this.setState(({stops}) => ({\n          stops: arrayMove(stops, oldIndex, newIndex),\n        }));\n    };\n\n    onSubmit = () => {\n        return this.props.callback(this.state.stops)\n    }\n\n    handleDate = (dateItem, index) => {\n\n        this.setState(({date}) => ({\n            date: date.map((item, i) => {\n                if(i === index){\n                    return dateItem;\n                }else {\n                    return item;\n                }\n            })\n        }))\n    }\n\n\n    render(){\n        return(\n            <Modal className=\"modalPurple\" show = {this.props.show} onHide={this.props.hide}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Trip Stops</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <div className=\"container\">\n                        <h4 className=\"row\">Current Route</h4>\n                        <div className=\"row boxedItem mb-2\">\n                            <span className=\"col-4 mr-auto spanText\">{this.props.start}</span>\n                            <Flatpickr data-enable-time\n                            value={this.state.date[0]}\n                            onChange={date => {this.handleDate(date, 0)}} />\n                        </div>\n                        <SortableList\n                            items={this.state.stops}\n                            onSortEnd={this.onSortEnd}\n                            onRemove={this.handlePlacesRemove}\n                            date={this.state.date}\n                            handleDate={this.handleDate}\n                            useDragHandle\n                        />\n                        <div className=\"row boxedItem mb-2\">\n                            <span className=\"spanText\">{this.props.end}</span>\n                        </div>\n                        <div className=\"row mt-5\">\n                            <input className=\"form-control\" id=\"stopLocation\" type=\"text\" size=\"50\" placeholder=\"Add Trip Stop\" autoComplete=\"on\" runat=\"server\" />\n                        </div>\n                    </div>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={this.onSubmit}>Set Stops</Button>\n                </Modal.Footer>\n            </Modal>\n        )\n    }\n}\n\nexport default TripStops","import React from 'react'\n\n\nexport class TripsModel {\n\n    constructor(){\n        this.tripData = []\n        this.duration = 0\n        this.distance = 0\n        this.startLocation = {\n            lat: 0,\n            lng: 0,\n            name: \"\"\n        }\n        this.endLocation = {\n            lat: 0,\n            lng: 0,\n            name: \"\"\n        }\n    }\n}","import React, {Component, createRef} from 'react';\nimport '../App.css';\nimport GooglePlaces from './GooglePlaces';\nimport PolylineGenerator from './PolylineGenerator';\nimport CityData from './CityData';\nimport TripStops from './TripStops';\nimport {TripsModel} from '../models/trips';\nimport Axios from 'axios';\n\nclass GoogleMap extends PolylineGenerator {\n\n      constructor(props) {\n        super(props);\n        this.state = {\n          loaded: false, \n          showCityData: false,\n          startMarker: null,\n          endMarker: null,\n          tripData: new TripsModel(),\n          showStopModal: false\n        }\n        this.showDirections = this.showDirections.bind(this);\n        this.polylineArray = []\n      }\n\n      GoogleMapsRef = createRef()\n\n      componentDidMount() {\n        const googleMapsAPI = document.createElement(\"script\")\n        googleMapsAPI.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.REACT_APP_GOOGLE_MAPS}&libraries=places,geometry`;\n        googleMapsAPI.id = \"googleMaps\"\n        window.document.body.appendChild(googleMapsAPI);\n\n        googleMapsAPI.addEventListener(\"load\", () => {\n          this.setState({loaded: true})\n          this.googleMaps = this.createMap()\n        })\n      }\n\n      componentDidUpdate(prevProps, prevState){\n\n        if(this.state.tripData.endLocation.lat !== 0 && this.state.tripData.endLocation.lng !== 0 && \n          this.state.tripData.startLocation.lat !== 0 && this.state.tripData.startLocation.lng !== 0){\n            if (prevState.tripData.startLocation !== this.state.tripData.startLocation || prevState.tripData.endLocation !== this.state.tripData.endLocation){\n                this.showModal()\n\n            }\n          }\n\n      }\n\n\n      createMap = () =>\n        new window.google.maps.Map(this.GoogleMapsRef.current, {\n          zoom: 10,\n          center: {\n            lat: 37.3230,\n            lng: -122.0322\n          },\n          disableDefaultUI: true,\n        })\n\n      showModal(){\n        this.setState({showStopModal: true})\n      }\n\n      async showDirections(stops){\n        this.setState({showStopModal: false, showCityData: true})\n          this.polylineArray.forEach(line => {\n            line.setMap(null)\n          })\n          this.polylineArray = []\n          var bounds = new window.google.maps.LatLngBounds();\n          var directionsData = await this.createPolylineAndWeatherData([this.state.tripData.startLocation, ...stops, this.state.tripData.endLocation], this.googleMaps, bounds)\n  \n          this.googleMaps.fitBounds(directionsData[0])\n          var tripData = Object.assign({}, this.state.tripData)\n\n          tripData.tripData = directionsData[1]\n          tripData.duration = directionsData[2]\n          tripData.distance = directionsData[3]\n          this.postStops(tripData.tripData)\n          this.setState({\n            tripData: tripData\n          })\n\n      }\n\n\n      postStops = (tripData) => {\n        const data = tripData.map(trip => {\n          return {\n            city: trip.city,\n            condition: trip.weather.Description,\n            severe: trip.weather.severe\n          }\n        })\n        Axios.post('/api/locations', data).catch(err => {\n          console.log(err)\n        })\n      }\n\n      callbackStart = (coordinates) => {\n          var tripData = Object.assign({}, this.state.tripData)\n          tripData.startLocation = coordinates\n          this.setState({tripData: tripData});\n\n          if(this.state.markerStart){ this.state.markerStart.setMap(null); }\n\n          var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n\n          this.state.markerStart = new window.google.maps.Marker({\n            position: newCoordinates,\n            map: this.googleMaps,\n            title: \"Start Location\",\n            animation: window.google.maps.Animation.DROP\n          })\n          this.googleMaps.setCenter(newCoordinates)\n          this.state.markerStart.setMap(this.googleMaps)\n\n      }\n\n      callbackEnd = (coordinates) => {\n        var tripData = Object.assign({}, this.state.tripData)\n        tripData.endLocation = coordinates\n        this.setState({tripData: tripData});\n\n        if(this.state.markerEnd){ this.state.markerEnd.setMap(null); }\n\n        var newCoordinates = new window.google.maps.LatLng(coordinates.lat, coordinates.lng);\n\n        this.state.markerEnd = new window.google.maps.Marker({\n          position: newCoordinates,\n          title: \"End Location\",\n          animation: window.google.maps.Animation.DROP\n        })\n\n        this.googleMaps.setCenter(newCoordinates)\n        this.state.markerEnd.setMap(this.googleMaps)\n\n      }\n\n\n      render() {\n        let modalClose = () => this.setState({ showStopModal: false });\n        return (\n          <div>\n            <div className=\"map\" ref={this.GoogleMapsRef} />\n              { this.state.loaded ? <GooglePlaces callbackStart={this.callbackStart} callbackEnd={this.callbackEnd} /> : null }\n              { this.state.showCityData ? <CityData cityData={this.state.tripData}/> : null}\n              { this.state.loaded ? <TripStops show={this.state.showStopModal} hide={modalClose} start={this.state.tripData.startLocation.name} end={this.state.tripData.endLocation.name} callback={this.showDirections} /> : null }\n          </div>\n        );\n      }\n    \n}\n\nexport default GoogleMap;","import React, {component} from 'react';\nimport '../style/login.css'\nimport logo from '../images/InTheClear.png'\n\nconst LoginContainer = (props) => {\n\n    return(\n        <div className=\"imageBackground\">\n            <img className=\"mx-auto d-block img-logo mb-1 mt-3\" style={{position: \"relative\"}} alt=\"logo\" src={logo}></img>\n            {props.children}\n        </div>\n    )\n}\n\nexport default LoginContainer;","import React, {Component} from 'react'\nimport {Card, Button} from 'react-bootstrap'\nimport LoginContainer from './loginContainer'\nimport Axios from 'axios';\nimport \"../style/login.css\"\n\nclass Login extends Component {\n\n    constructor(props){\n        super(props)\n        this.state = {\n            name: \"\",\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            login: true\n        }\n    }\n\n    handleInputChange = (event) => {\n        const target = event.target\n        this.setState({\n            [target.name]: target.value\n        })\n    }\n\n    onSubmit = (event) => {\n\n        event.preventDefault();\n\n        const loginObj = {\n            username: this.state.username, \n            password: this.state.password\n        }\n\n        Axios.post('api/user/auth', loginObj, {withCredentials: true})\n        .then(res => {\n            if(res.status == 200){\n                //go to main page since access is granted\n                this.props.history.push('/')\n            }\n        }).catch(err => {\n            alert(\"Error logging in! Please try again.\")\n        })\n        \n        \n    }\n\n    submitNewUser = (event) => {\n        event.preventDefault();\n\n        const userObj = {\n            name: this.state.name,\n            username: this.state.username, \n            password: this.state.password,\n            email: this.state.email\n        }\n\n        Axios.post('api/user', userObj)\n        .then(res => {\n            if(res.status == 200){\n                //show login form\n                this.setState({login: true})\n            }\n        }).catch(err => {\n            alert(\"There was an issue signing you up! Please try again.\")\n        })\n    }\n\n    handleNewUser = (event) => {\n        //prevent default to prevent form submission\n        event.preventDefault()\n        //show register form\n        this.setState({login: false})\n    }\n\n    render(){\n        return(\n            <LoginContainer>\n            <div className=\"container\">\n                <div className=\"row justify-content-md-center mt-5\">\n                    <Card className=\"col-5\">\n                        <Card.Header className=\"headerFont\">{this.state.login ? \"Login\" : \"Register\" }</Card.Header>\n                        <Card.Body>\n                        {this.state.login ?\n                            <form onSubmit={this.onSubmit}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username</label>\n                                    <input name=\"username\" className=\"form-control\" defaultValue={this.state.username} onChange={this.handleInputChange}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input name=\"password\" type=\"password\" className=\"form-control\" defaultValue={this.state.password} onChange={this.handleInputChange}></input>\n                                </div>\n                                <Button type=\"submit\">Submit</Button>\n                                <Button type=\"button\" onClick={this.handleNewUser} className=\"ml-2\">Register</Button>\n                            </form>\n                            :\n                            <form onSubmit={this.submitNewUser}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Name</label>\n                                    <input name=\"name\" className=\"form-control\" defaultValue={this.state.name} onChange={this.handleInputChange}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"username\">Username</label>\n                                    <input name=\"username\" className=\"form-control\" defaultValue={this.state.username} onChange={this.handleInputChange}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password\">Password</label>\n                                    <input name=\"password\" className=\"form-control\" defaultValue={this.state.password} onChange={this.handleInputChange}></input>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email\">Email Adress</label>\n                                    <input name=\"email\" className=\"form-control\" defaultValue={this.state.password} onChange={this.handleInputChange}></input>\n                                    <small className=\"form-text text-muted\">We will never share nor spam your Email Address</small>\n                                </div>\n                                <Button type=\"submit\">Submit</Button>\n                            </form>\n                        }\n                        </Card.Body>\n                    </Card>\n                </div>\n            </div>\n            </LoginContainer>\n        )\n    }\n} \n\nexport default Login","import React from 'react';\nimport {Switch, Route, BrowserRouter} from 'react-router-dom'\nimport GoogleMap from \"./components/googleMap\";\nimport Login from \"./components/login\"\nimport withAuth from \"./services/authService\"\nimport axios from 'axios'\n\naxios.defaults.baseURL = 'http://ec2-52-23-172-240.compute-1.amazonaws.com/'\n\nfunction App() {\n  return (\n    <div >\n      <BrowserRouter>\n        <Switch>\n          <Route path=\"/login\" component={Login}/>\n          <Route path=\"\" component={withAuth(GoogleMap)}/>\n        </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Redirect } from \"react-router-dom\"\nimport Axios from 'axios';\n\nexport default function withAuth(AuthComponent){\n\n    return class extends Component {\n        constructor(){\n            super()\n            this.state = {\n                redirect: false,\n                loading: true\n            }\n        }\n\n        componentDidMount() {\n            Axios.get('/api/user/auth', {withCredentials: true})\n            .then(res=> {\n                if(res.status === 200){\n                    this.setState({loading: false})\n                }else {\n                    const error = new Error(res.error);\n                    throw error;\n                }\n            }).catch(err => {\n                this.setState({loading: false, redirect: true})\n            })\n        }\n        \n        render(){\n            //if not authenticated redirect to login... else grant access\n            if(this.state.loading){\n                return null;\n            }\n            if(this.state.redirect){\n                return <Redirect to=\"/login\" />;\n            }\n            return(\n                <React.Fragment>\n                    <AuthComponent {...this.props} />\n                </React.Fragment>\n            )\n        }\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/InTheClear.0cce63cd.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud.f1f9dc71.png\";","module.exports = __webpack_public_path__ + \"static/media/CloudyNight.70df1a4b.png\";","module.exports = __webpack_public_path__ + \"static/media/danger.5e73da14.png\";","module.exports = __webpack_public_path__ + \"static/media/Night.df2219d3.png\";","module.exports = __webpack_public_path__ + \"static/media/partlyCloudy.8039d00d.png\";","module.exports = __webpack_public_path__ + \"static/media/rain.f9c6cead.png\";","module.exports = __webpack_public_path__ + \"static/media/snow.44a68071.png\";","module.exports = __webpack_public_path__ + \"static/media/sun.1a88d0f3.png\";","module.exports = __webpack_public_path__ + \"static/media/arrow-right-solid.3aa5dcbc.svg\";","module.exports = __webpack_public_path__ + \"static/media/align-justify-solid.179bf66a.svg\";","module.exports = __webpack_public_path__ + \"static/media/trash-alt-solid.ce8e2a41.svg\";"],"sourceRoot":""}